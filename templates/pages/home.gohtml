{{define "content"}}
    {{- if not (eq .HTMX.Request.Target "posts")}}
        {{template "top-content" .}}
    {{- end}}

    {{template "posts" .}}

    {{- if not (eq .HTMX.Request.Target "posts")}}
        {{template "file-msg" .}}
    {{- end}}
{{end}}

{{define "top-content"}}
    <section class="bg-secondary text-secondary-content p-5">
      <div>
        <div>
            <h1 class="text-2xl font-bold">
                Hello{{if .IsAuth}}, {{.AuthUser.Name}}{{end}}
            </h1>
            <h2 class="text-md">{{if .IsAuth}}Welcome back!{{else}}Please login in to your account.{{end}}</h2>
        </div>
      </div>
    </section>

    <section class="prose p-4">
        <h2>Recent posts</h1>
        <h3>
            Below is an example of both paging and AJAX fetching using HTMX
        </h2>
    </section>
{{end}}

{{define "posts"}}
    <div id="posts">
        {{- range .Data}}
            <article class="card card-side">
                <figure class="size-20 self-center">
                    <img src="{{file "gopher.png"}}" alt="Gopher"/>
                </figure>
                <div class="p-3">
                    <h2 class="card-title">{{.Title}}</h2>
                    <p>{{.Body}}</p>
                </div>
            </article>
            <div class="divider"></div>

        {{- end}}

        <div class="flex justify-center">
            <div class="flex flex-row gap-5">
                {{- if not $.Pager.IsBeginning}}
                    <p class="control">
                        <button class="btn btn-primary" hx-swap="outerHTML" hx-get="/?page={{sub $.Pager.Page 1}}" hx-target="#posts">Previous page</button>
                    </p>
                {{- end}}
                {{- if not $.Pager.IsEnd}}
                    <p class="control">
                        <button class="btn btn-primary" hx-swap="outerHTML" hx-get="/?page={{add $.Pager.Page 1}}" hx-target="#posts">Next page</button>
                    </p>
                {{- end}}
            </div>
        </div>
    </div>
{{end}}

{{define "file-msg"}}
    <article role="alert" class="alert alert-warning mt-4" x-data="{show: true}" x-show="show">
        <button @click="show = false">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-6 w-6 shrink-0 stroke-current"
              fill="none"
              viewBox="0 0 24 24">
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
        </button>
        <div>
            <h3 class="font-bold">Serving files</h3>
            <p class="text-xs">
                In the example posts above, check how the file URL contains a cache-buster query parameter which changes only when the app is restarted.
            </p>
          </div>
        </div>
    </article>
{{end}}